/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GRAPHSCREENVIEWBASE_HPP
#define GRAPHSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/graphscreen_screen/graphScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class graphScreenViewBase : public touchgfx::View<graphScreenPresenter>
{
public:
    graphScreenViewBase();
    virtual ~graphScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::GraphWrapAndClear<600> pidGoalGraph;
    touchgfx::GraphLabelsX pidGoalGraphMajorXAxisLabel;
    touchgfx::GraphLabelsY pidGoalGraphMajorYAxisLabel;
    touchgfx::GraphElementLine pidGoalGraphLine1;
    touchgfx::PainterRGB565 pidGoalGraphLine1Painter;
    touchgfx::GraphScroll<100> pidAmpsGraph;
    touchgfx::GraphLabelsX pidAmpsGraphMajorXAxisLabel;
    touchgfx::GraphLabelsY pidAmpsGraphMajorYAxisLabel;
    touchgfx::GraphElementLine pidAmpsGraphLine1;
    touchgfx::PainterRGB565 pidAmpsGraphLine1Painter;
    touchgfx::ButtonWithIcon backButton;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<graphScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GRAPHSCREENVIEWBASE_HPP
