/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTIMESCREENVIEWBASE_HPP
#define SETTIMESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settimescreen_screen/setTimeScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/numericKeyPad.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class setTimeScreenViewBase : public touchgfx::View<setTimeScreenPresenter>
{
public:
    setTimeScreenViewBase();
    virtual ~setTimeScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void backSaveButtonPressed()
    {
        // Override and implement this function in setTimeScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Draggable< touchgfx::Box > box1;
    touchgfx::TextArea timeLabel;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > timeValueText;
    numericKeyPad numericKeyPad1;
    touchgfx::ButtonWithLabel backSaveButton;
    touchgfx::Line cursor;
    touchgfx::PainterRGB565 cursorPainter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TIMEVALUETEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar timeValueTextBuffer[TIMEVALUETEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<setTimeScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SETTIMESCREENVIEWBASE_HPP
