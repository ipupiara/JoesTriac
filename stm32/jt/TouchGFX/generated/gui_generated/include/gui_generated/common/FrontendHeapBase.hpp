/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>
#include <gui/configscreen_screen/configScreenView.hpp>
#include <gui/configscreen_screen/configScreenPresenter.hpp>
#include <gui/settimescreen_screen/setTimeScreenView.hpp>
#include <gui/settimescreen_screen/setTimeScreenPresenter.hpp>
#include <gui/calibrationscreen_screen/calibrationScreenView.hpp>
#include <gui/calibrationscreen_screen/calibrationScreenPresenter.hpp>
#include <gui/alarmconfigscreen_screen/alarmConfigScreenView.hpp>
#include <gui/alarmconfigscreen_screen/alarmConfigScreenPresenter.hpp>
#include <gui/editcalibvaluesscreen_screen/editCalibValuesScreenView.hpp>
#include <gui/editcalibvaluesscreen_screen/editCalibValuesScreenPresenter.hpp>
#include <gui/setamperescreen_screen/setAmpereScreenView.hpp>
#include <gui/setamperescreen_screen/setAmpereScreenPresenter.hpp>
#include <gui/fatalerrorscreen_screen/fatalErrorScreenView.hpp>
#include <gui/fatalerrorscreen_screen/fatalErrorScreenPresenter.hpp>
#include <gui/runscreen_screen/runScreenView.hpp>
#include <gui/runscreen_screen/runScreenPresenter.hpp>
#include <gui/editcaliblowscreen_screen/editCalibLowScreenView.hpp>
#include <gui/editcaliblowscreen_screen/editCalibLowScreenPresenter.hpp>
#include <gui/editcalibhighscreen_screen/editCalibHighScreenView.hpp>
#include <gui/editcalibhighscreen_screen/editCalibHighScreenPresenter.hpp>
#include <gui/requeststopscreen_screen/requestStopScreenView.hpp>
#include <gui/requeststopscreen_screen/requestStopScreenPresenter.hpp>
#include <gui/jobcompletescreen_screen/jobCompleteScreenView.hpp>
#include <gui/jobcompletescreen_screen/jobCompleteScreenPresenter.hpp>
#include <gui/startupscreen_screen/startupScreenView.hpp>
#include <gui/startupscreen_screen/startupScreenPresenter.hpp>
#include <gui/dummyscreen_screen/dummyScreenView.hpp>
#include <gui/dummyscreen_screen/dummyScreenPresenter.hpp>
#include <gui/calibratezeroscreen_screen/calibrateZeroScreenView.hpp>
#include <gui/calibratezeroscreen_screen/calibrateZeroScreenPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< mainScreenView,
            touchgfx::meta::TypeList< configScreenView,
            touchgfx::meta::TypeList< setTimeScreenView,
            touchgfx::meta::TypeList< calibrationScreenView,
            touchgfx::meta::TypeList< alarmConfigScreenView,
            touchgfx::meta::TypeList< editCalibValuesScreenView,
            touchgfx::meta::TypeList< setAmpereScreenView,
            touchgfx::meta::TypeList< fatalErrorScreenView,
            touchgfx::meta::TypeList< runScreenView,
            touchgfx::meta::TypeList< editCalibLowScreenView,
            touchgfx::meta::TypeList< editCalibHighScreenView,
            touchgfx::meta::TypeList< requestStopScreenView,
            touchgfx::meta::TypeList< jobCompleteScreenView,
            touchgfx::meta::TypeList< startupScreenView,
            touchgfx::meta::TypeList< dummyScreenView,
            touchgfx::meta::TypeList< calibrateZeroScreenView,
            touchgfx::meta::Nil > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< mainScreenPresenter,
            touchgfx::meta::TypeList< configScreenPresenter,
            touchgfx::meta::TypeList< setTimeScreenPresenter,
            touchgfx::meta::TypeList< calibrationScreenPresenter,
            touchgfx::meta::TypeList< alarmConfigScreenPresenter,
            touchgfx::meta::TypeList< editCalibValuesScreenPresenter,
            touchgfx::meta::TypeList< setAmpereScreenPresenter,
            touchgfx::meta::TypeList< fatalErrorScreenPresenter,
            touchgfx::meta::TypeList< runScreenPresenter,
            touchgfx::meta::TypeList< editCalibLowScreenPresenter,
            touchgfx::meta::TypeList< editCalibHighScreenPresenter,
            touchgfx::meta::TypeList< requestStopScreenPresenter,
            touchgfx::meta::TypeList< jobCompleteScreenPresenter,
            touchgfx::meta::TypeList< startupScreenPresenter,
            touchgfx::meta::TypeList< dummyScreenPresenter,
            touchgfx::meta::TypeList< calibrateZeroScreenPresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
