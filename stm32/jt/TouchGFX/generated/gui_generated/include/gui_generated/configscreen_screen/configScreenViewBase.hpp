/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONFIGSCREENVIEWBASE_HPP
#define CONFIGSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/configscreen_screen/configScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class configScreenViewBase : public touchgfx::View<configScreenPresenter>
{
public:
    configScreenViewBase();
    virtual ~configScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void calibrationClicked()
    {
        // Override and implement this function in configScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box bgBox;
    touchgfx::ButtonWithLabel calibrationButton;
    touchgfx::ButtonWithIcon backButton;
    touchgfx::ButtonWithLabel editCalibButton;
    touchgfx::ButtonWithLabel alarmEditButton;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<configScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CONFIGSCREENVIEWBASE_HPP
