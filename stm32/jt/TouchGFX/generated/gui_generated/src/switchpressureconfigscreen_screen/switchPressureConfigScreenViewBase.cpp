/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/switchpressureconfigscreen_screen/switchPressureConfigScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

switchPressureConfigScreenViewBase::switchPressureConfigScreenViewBase() :
    buttonCallback(this, &switchPressureConfigScreenViewBase::buttonCallbackHandler),
    numericKeyPad1NumPressedCallback(this, &switchPressureConfigScreenViewBase::numericKeyPad1NumPressedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(176, 247, 191));
    add(box1);

    cancelButton.setXY(381, 363);
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    cancelButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_UV0W));
    cancelButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setAction(buttonCallback);
    add(cancelButton);

    backNSaveButton.setXY(586, 363);
    backNSaveButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    backNSaveButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_PCPV));
    backNSaveButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backNSaveButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backNSaveButton.setAction(buttonCallback);
    add(backNSaveButton);

    cursor.setPosition(672, 250, 23, 39);
    cursorPainter.setColor(touchgfx::Color::getColorFromRGB(247, 212, 15));
    cursor.setPainter(cursorPainter);
    cursor.setStart(5, 5);
    cursor.setEnd(5, 20);
    cursor.setLineWidth(20);
    cursor.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    cursor.setAlpha(138);
    add(cursor);

    numericKeyPad1.setXY(0, 23);
    numericKeyPad1.setNumPressedCallback(numericKeyPad1NumPressedCallback);
    add(numericKeyPad1);

    textArea1.setXY(379, 132);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F7T3));
    add(textArea1);

    switchPressureOnRadiobutton.setXY(580, 121);
    switchPressureOnRadiobutton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID));
    switchPressureOnRadiobutton.setSelected(true);
    switchPressureOnRadiobutton.setDeselectionEnabled(false);
    radioButtonGroup1.add(switchPressureOnRadiobutton);
    add(switchPressureOnRadiobutton);

    switchPressureOffRadiobutton.setXY(672, 121);
    switchPressureOffRadiobutton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID));
    switchPressureOffRadiobutton.setSelected(false);
    switchPressureOffRadiobutton.setDeselectionEnabled(true);
    radioButtonGroup1.add(switchPressureOffRadiobutton);
    add(switchPressureOffRadiobutton);

    textArea2.setXY(590, 84);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LTQX));
    add(textArea2);

    textArea3.setXY(674, 84);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0Y8O));
    add(textArea3);

    textArea4.setXY(379, 251);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9H0N));
    add(textArea4);

    switchPressureTimeText.setXY(668, 243);
    switchPressureTimeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    switchPressureTimeText.setLinespacing(0);
    Unicode::snprintf(switchPressureTimeTextBuffer, SWITCHPRESSURETIMETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NDVA).getText());
    switchPressureTimeText.setWildcard(switchPressureTimeTextBuffer);
    switchPressureTimeText.resizeToCurrentText();
    switchPressureTimeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SAF4));
    add(switchPressureTimeText);
}

switchPressureConfigScreenViewBase::~switchPressureConfigScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void switchPressureConfigScreenViewBase::setupScreen()
{
    numericKeyPad1.initialize();
}

void switchPressureConfigScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &cancelButton)
    {
        //cancelButtonPressedInteraction
        //When cancelButton clicked call virtual function
        //Call cancelButtonPressed
        cancelButtonPressed();
    }
    if (&src == &backNSaveButton)
    {
        //backNSaveButtonPressedInteraction
        //When backNSaveButton clicked call virtual function
        //Call backNSaveButtonPressed
        backNSaveButtonPressed();
    }
}

void switchPressureConfigScreenViewBase::numericKeyPad1NumPressedCallbackHandler(uint8_t value)
{
    //numPressedInteraction
    //When numericKeyPad1 numPressed call virtual function
    //Call numPressed
    numPressed(value);
}
