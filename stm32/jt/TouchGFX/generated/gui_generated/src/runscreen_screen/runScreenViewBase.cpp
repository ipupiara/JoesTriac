/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/runscreen_screen/runScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


runScreenViewBase::runScreenViewBase() :
    buttonCallback(this, &runScreenViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(190, 226, 247));

    ampGauge.setBackground(touchgfx::Bitmap(BITMAP_BLUE_GAUGES_ORIGINAL_GAUGE_BACKGROUND_STYLE_01_ID));
    ampGauge.setPosition(263, 133, 251, 251);
    ampGauge.setCenter(125, 125);
    ampGauge.setStartEndAngle(-85, 85);
    ampGauge.setRange(0, 100);
    ampGauge.setValue(50);
    ampGauge.setNeedle(BITMAP_BLUE_NEEDLES_ORIGINAL_GAUGE_NEEDLE_STYLE_01_ID, 11, 55);
    ampGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    ampGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    ampGauge.setArcVisible();
    ampGaugePainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_GAUGES_ORIGINAL_GAUGE_FILL_STYLE_01_ID));
    ampGauge.getArc().setPainter(ampGaugePainter);
    ampGauge.getArc().setRadius(94);
    ampGauge.getArc().setLineWidth(14);
    ampGauge.getArc().setCapPrecision(180);
    ampGauge.setArcPosition(28, 30, 196, 88);

    timeValueText.setPosition(172, 11, 137, 49);
    timeValueText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    timeValueText.setLinespacing(0);
    Unicode::snprintf(timeValueTextBuffer, TIMEVALUETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0QML).getText());
    timeValueText.setWildcard(timeValueTextBuffer);
    timeValueText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XHDS));

    startButton.setXY(139, 384);
    startButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_STARTBTNINACTIVE_ID), touchgfx::Bitmap(BITMAP_STARTBTNINACTIVE_ID));
    startButton.setIconXY(0, 0);

    stopButton.setXY(493, 384);
    stopButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_STOPBTN_ID), touchgfx::Bitmap(BITMAP_STOPBTNPRESSED_ID));
    stopButton.setIconXY(0, 0);
    stopButton.setAction(buttonCallback);

    setAmpereText.setXY(465, 12);
    setAmpereText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    setAmpereText.setLinespacing(0);
    Unicode::snprintf(setAmpereTextBuffer, SETAMPERETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OJB3).getText());
    setAmpereText.setWildcard(setAmpereTextBuffer);
    setAmpereText.resizeToCurrentText();
    setAmpereText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X5Q9));

    textArea1.setXY(14, 94);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K159));

    textArea2.setXY(352, 94);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FEL2));

    currentTimeText.setPosition(172, 81, 137, 49);
    currentTimeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    currentTimeText.setLinespacing(0);
    Unicode::snprintf(currentTimeTextBuffer, CURRENTTIMETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_J99Y).getText());
    currentTimeText.setWildcard(currentTimeTextBuffer);
    currentTimeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LPIR));

    currentAmpereText.setXY(465, 82);
    currentAmpereText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    currentAmpereText.setLinespacing(0);
    Unicode::snprintf(currentAmpereTextBuffer, CURRENTAMPERETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6OBZ).getText());
    currentAmpereText.setWildcard(currentAmpereTextBuffer);
    currentAmpereText.resizeToCurrentText();
    currentAmpereText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GCRP));

    boxProgress1.setXY(14, 133);
    boxProgress1.setProgressIndicatorPosition(2, 2, 180, 16);
    boxProgress1.setRange(0, 100);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 151, 255));
    boxProgress1.setValue(60);

    textArea3.setXY(0, 0);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5I23));

    textArea4.setXY(0, 0);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_56DF));

    textArea5.setXY(0, 0);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2CW9));

    textArea6.setXY(0, 0);
    textArea6.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea6.setLinespacing(0);
    textArea6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KBMG));

    add(__background);
    add(box1);
    add(ampGauge);
    add(timeValueText);
    add(startButton);
    add(stopButton);
    add(setAmpereText);
    add(textArea1);
    add(textArea2);
    add(currentTimeText);
    add(currentAmpereText);
    add(boxProgress1);
    add(textArea3);
    add(textArea4);
    add(textArea5);
    add(textArea6);
}

void runScreenViewBase::setupScreen()
{

}

void runScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &stopButton)
    {
        //Interaction1
        //When stopButton clicked call virtual function
        //Call stopButtonPressed
        stopButtonPressed();
    }
}
