/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/alarmconfigscreen_screen/alarmConfigScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


alarmConfigScreenViewBase::alarmConfigScreenViewBase() :
    buttonCallback(this, &alarmConfigScreenViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(176, 247, 191));

    numericKeyPad1.setXY(0, 23);

    textArea1.setXY(466, 60);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TPKG));

    alarmTimeText.setXY(602, 48);
    alarmTimeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    alarmTimeText.setLinespacing(0);
    alarmTimeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y4IF));

    toggleButton1.setXY(602, 154);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));

    textArea2.setXY(466, 162);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZQ4));

    cursor.setPosition(606, 55, 23, 39);
    cursorPainter.setColor(touchgfx::Color::getColorFromRGB(247, 212, 15));
    cursor.setPainter(cursorPainter);
    cursor.setStart(5, 5);
    cursor.setEnd(5, 20);
    cursor.setLineWidth(20);
    cursor.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    cursor.setAlpha(138);

    backNSaveButton.setXY(466, 372);
    backNSaveButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    backNSaveButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ORQ0));
    backNSaveButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backNSaveButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backNSaveButton.setAction(buttonCallback);

    add(__background);
    add(box1);
    add(numericKeyPad1);
    add(textArea1);
    add(alarmTimeText);
    add(toggleButton1);
    add(textArea2);
    add(cursor);
    add(backNSaveButton);
}

void alarmConfigScreenViewBase::setupScreen()
{
    numericKeyPad1.initialize();
}

void alarmConfigScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backNSaveButton)
    {
        //Interaction1
        //When backNSaveButton clicked call virtual function
        //Call backNSaveButtonPressed
        backNSaveButtonPressed();
    }
}
