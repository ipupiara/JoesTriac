/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/graphscreen_screen/graphScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

graphScreenViewBase::graphScreenViewBase() :
    buttonCallback(this, &graphScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(228, 245, 228));
    add(box1);

    pidGoalGraph.setPosition(24, 22, 760, 390);
    pidGoalGraph.setScale(100);
    pidGoalGraph.setGraphAreaMargin(0, 0, 0, 0);
    pidGoalGraph.setGraphAreaPadding(0, 0, 0, 0);
    pidGoalGraph.setGraphRangeY(0, 120);
    pidGoalGraphMajorXAxisLabel.setInterval(60);
    pidGoalGraphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_0V0K));
    pidGoalGraphMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    pidGoalGraphMajorXAxisLabel.setScale(100);
    pidGoalGraph.addBottomElement(pidGoalGraphMajorXAxisLabel);

    pidGoalGraphMajorYAxisLabel.setInterval(12);
    pidGoalGraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_NCLI));
    pidGoalGraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    pidGoalGraphMajorYAxisLabel.setScale(100);
    pidGoalGraph.addLeftElement(pidGoalGraphMajorYAxisLabel);

    pidGoalGraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    pidGoalGraphLine1.setPainter(pidGoalGraphLine1Painter);
    pidGoalGraphLine1.setLineWidth(2);
    pidGoalGraph.addGraphElement(pidGoalGraphLine1);


    add(pidGoalGraph);

    pidAmpsGraph.setPosition(24, 22, 760, 390);
    pidAmpsGraph.setScale(1);
    pidAmpsGraph.setGraphAreaMargin(0, 0, 0, 0);
    pidAmpsGraph.setGraphAreaPadding(0, 0, 0, 0);
    pidAmpsGraph.setGraphRangeY(0, 100);
    pidAmpsGraphMajorXAxisLabel.setInterval(10);
    pidAmpsGraphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_40R8));
    pidAmpsGraphMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(22, 23, 23));
    pidAmpsGraphMajorXAxisLabel.setScale(1);
    pidAmpsGraph.addBottomElement(pidAmpsGraphMajorXAxisLabel);

    pidAmpsGraphMajorYAxisLabel.setInterval(10);
    pidAmpsGraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_KTLT));
    pidAmpsGraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(15, 15, 15));
    pidAmpsGraphMajorYAxisLabel.setScale(1);
    pidAmpsGraph.addLeftElement(pidAmpsGraphMajorYAxisLabel);

    pidAmpsGraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    pidAmpsGraphLine1.setPainter(pidAmpsGraphLine1Painter);
    pidAmpsGraphLine1.setLineWidth(2);
    pidAmpsGraph.addGraphElement(pidAmpsGraphLine1);

    add(pidAmpsGraph);

    backButton.setXY(515, 423);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    backButton.setIconXY(97, 0);
    backButton.setAction(buttonCallback);
    add(backButton);
}

graphScreenViewBase::~graphScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void graphScreenViewBase::setupScreen()
{

}

void graphScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //Interaction1
        //When backButton clicked change screen to runScreen
        //Go to runScreen with no screen transition
        application().gotorunScreenScreenNoTransition();
    }
}
