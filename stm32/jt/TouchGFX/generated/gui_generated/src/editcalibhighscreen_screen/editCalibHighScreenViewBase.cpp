/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/editcalibhighscreen_screen/editCalibHighScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


editCalibHighScreenViewBase::editCalibHighScreenViewBase() :
    buttonCallback(this, &editCalibHighScreenViewBase::buttonCallbackHandler),
    numericKeyPad1NumPressedCallback(this, &editCalibHighScreenViewBase::numericKeyPad1NumPressedCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(176, 247, 191));

    calibLowText.setXY(652, 51);
    calibLowText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    calibLowText.setLinespacing(0);
    Unicode::snprintf(calibLowTextBuffer, CALIBLOWTEXT_SIZE, "%s", touchgfx::TypedText(T_ZZZZWCTEXT).getText());
    calibLowText.setWildcard(calibLowTextBuffer);
    calibLowText.resizeToCurrentText();
    calibLowText.setTypedText(touchgfx::TypedText(T_CALIBVALUETEXT));

    calibHighText.setXY(652, 150);
    calibHighText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    calibHighText.setLinespacing(0);
    Unicode::snprintf(calibHighTextBuffer, CALIBHIGHTEXT_SIZE, "%s", touchgfx::TypedText(T_ZZZZWCTEXT).getText());
    calibHighText.setWildcard(calibHighTextBuffer);
    calibHighText.resizeToCurrentText();
    calibHighText.setTypedText(touchgfx::TypedText(T_CALIBVALUETEXT));

    calibLowButton.setXY(439, 44);
    calibLowButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    calibLowButton.setLabelText(touchgfx::TypedText(T_CALIBLOWBTNTEXT));
    calibLowButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    calibLowButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    calibLowButton.setAction(buttonCallback);

    backButton.setXY(439, 345);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    backButton.setLabelText(touchgfx::TypedText(T_BACKBUTTONTEXT));
    backButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setAction(buttonCallback);

    numericKeyPad1.setXY(0, 23);
    numericKeyPad1.setNumPressedCallback(numericKeyPad1NumPressedCallback);

    cursor.setPosition(658, 157, 23, 39);
    cursorPainter.setColor(touchgfx::Color::getColorFromRGB(247, 212, 15));
    cursor.setPainter(cursorPainter);
    cursor.setStart(5, 5);
    cursor.setEnd(5, 20);
    cursor.setLineWidth(20);
    cursor.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    cursor.setAlpha(138);

    textArea2.setXY(464, 161);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_CALIBHIGHBTNTEXT));

    add(__background);
    add(box1);
    add(calibLowText);
    add(calibHighText);
    add(calibLowButton);
    add(backButton);
    add(numericKeyPad1);
    add(cursor);
    add(textArea2);
}

void editCalibHighScreenViewBase::setupScreen()
{
    numericKeyPad1.initialize();
}

void editCalibHighScreenViewBase::numericKeyPad1NumPressedCallbackHandler(uint8_t value)
{
    //Interaction3
    //When numericKeyPad1 numPressed call virtual function
    //Call buttonPressed
    buttonPressed(value);
}

void editCalibHighScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &calibLowButton)
    {
        //Interaction1
        //When calibLowButton clicked change screen to editCalibLowScreen
        //Go to editCalibLowScreen with no screen transition
        application().gotoeditCalibLowScreenScreenNoTransition();
    }
    else if (&src == &backButton)
    {
        //Interaction2
        //When backButton clicked change screen to editCalibValuesScreen
        //Go to editCalibValuesScreen with no screen transition
        application().gotoeditCalibValuesScreenScreenNoTransition();
    }
}
