/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>
#include <gui/configscreen_screen/configScreenView.hpp>
#include <gui/configscreen_screen/configScreenPresenter.hpp>
#include <gui/settimescreen_screen/setTimeScreenView.hpp>
#include <gui/settimescreen_screen/setTimeScreenPresenter.hpp>
#include <gui/calibrationscreen_screen/calibrationScreenView.hpp>
#include <gui/calibrationscreen_screen/calibrationScreenPresenter.hpp>
#include <gui/alarmconfigscreen_screen/alarmConfigScreenView.hpp>
#include <gui/alarmconfigscreen_screen/alarmConfigScreenPresenter.hpp>
#include <gui/editcalibvaluesscreen_screen/editCalibValuesScreenView.hpp>
#include <gui/editcalibvaluesscreen_screen/editCalibValuesScreenPresenter.hpp>
#include <gui/setamperescreen_screen/setAmpereScreenView.hpp>
#include <gui/setamperescreen_screen/setAmpereScreenPresenter.hpp>
#include <gui/fatalerrorscreen_screen/fatalErrorScreenView.hpp>
#include <gui/fatalerrorscreen_screen/fatalErrorScreenPresenter.hpp>
#include <gui/runscreen_screen/runScreenView.hpp>
#include <gui/runscreen_screen/runScreenPresenter.hpp>
#include <gui/editcaliblowscreen_screen/editCalibLowScreenView.hpp>
#include <gui/editcaliblowscreen_screen/editCalibLowScreenPresenter.hpp>
#include <gui/editcalibhighscreen_screen/editCalibHighScreenView.hpp>
#include <gui/editcalibhighscreen_screen/editCalibHighScreenPresenter.hpp>
#include <gui/requeststopscreen_screen/requestStopScreenView.hpp>
#include <gui/requeststopscreen_screen/requestStopScreenPresenter.hpp>
#include <gui/jobcompletescreen_screen/jobCompleteScreenView.hpp>
#include <gui/jobcompletescreen_screen/jobCompleteScreenPresenter.hpp>
#include <gui/dummyscreen_screen/dummyScreenView.hpp>
#include <gui/dummyscreen_screen/dummyScreenPresenter.hpp>
#include <gui/behaviourconfigscreen_screen/behaviourConfigScreenView.hpp>
#include <gui/behaviourconfigscreen_screen/behaviourConfigScreenPresenter.hpp>
#include <gui/startupscreen_screen/startupScreenView.hpp>
#include <gui/startupscreen_screen/startupScreenPresenter.hpp>
#include <gui/switchpressureconfigscreen_screen/switchPressureConfigScreenView.hpp>
#include <gui/switchpressureconfigscreen_screen/switchPressureConfigScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperRGB565();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperARGB8888();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperL8_RGB565_BilinearInterpolation();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperL8_RGB888();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperL8_ARGB8888();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperA4();
}

/*
 * Screen Transition Declarations
 */

// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// configScreen

void FrontendApplicationBase::gotoconfigScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoconfigScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoconfigScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<configScreenView, configScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// setTimeScreen

void FrontendApplicationBase::gotosetTimeScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosetTimeScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosetTimeScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<setTimeScreenView, setTimeScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// calibrationScreen

void FrontendApplicationBase::gotocalibrationScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotocalibrationScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotocalibrationScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<calibrationScreenView, calibrationScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// alarmConfigScreen

void FrontendApplicationBase::gotoalarmConfigScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoalarmConfigScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoalarmConfigScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<alarmConfigScreenView, alarmConfigScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// editCalibValuesScreen

void FrontendApplicationBase::gotoeditCalibValuesScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoeditCalibValuesScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoeditCalibValuesScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<editCalibValuesScreenView, editCalibValuesScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// setAmpereScreen

void FrontendApplicationBase::gotosetAmpereScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosetAmpereScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosetAmpereScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<setAmpereScreenView, setAmpereScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// runScreen

void FrontendApplicationBase::gotorunScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotorunScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotorunScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<runScreenView, runScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// editCalibLowScreen

void FrontendApplicationBase::gotoeditCalibLowScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoeditCalibLowScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoeditCalibLowScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<editCalibLowScreenView, editCalibLowScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// editCalibHighScreen

void FrontendApplicationBase::gotoeditCalibHighScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoeditCalibHighScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoeditCalibHighScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<editCalibHighScreenView, editCalibHighScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// requestStopScreen

void FrontendApplicationBase::gotorequestStopScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotorequestStopScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotorequestStopScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<requestStopScreenView, requestStopScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// jobCompleteScreen

void FrontendApplicationBase::gotojobCompleteScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotojobCompleteScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotojobCompleteScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<jobCompleteScreenView, jobCompleteScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// behaviourConfigScreen

void FrontendApplicationBase::gotobehaviourConfigScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotobehaviourConfigScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotobehaviourConfigScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<behaviourConfigScreenView, behaviourConfigScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// startupScreen

void FrontendApplicationBase::gotostartupScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotostartupScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotostartupScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<startupScreenView, startupScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// switchPressureConfigScreen

void FrontendApplicationBase::gotoswitchPressureConfigScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoswitchPressureConfigScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoswitchPressureConfigScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<switchPressureConfigScreenView, switchPressureConfigScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
